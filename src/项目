    人力资源系统需求分析说明书

一、引言	1
二、需求分析	1
1.需求细则：	1
2.技术要求：	4
三、项目规定	5
1. 对功能的规定	5
2. 对性能的规定	6
3. 对可维护性的规定	6
4. 对个性的规定	6
5. 对项目过程的规定	7
四．运行环境	8
1. 硬件环境	8
2. 开发工具	8
3. 开发环境	8



一、引言
通过与多位软件使用者进行全面深入地探讨和分析，并完成《人力资源系统》市场的前期调查后，提出了这份软件需求分析说明书。
此需求分析说明书对《人力资源系统》软件做了全面细致的用户需求分析，明确所要开发的系统应具有的功能、性能与界面，使系统分析人员及软件开发人员能清楚地了解用户的需求，并在此基础上进一步提出概要设计说明书和完成后续设计与开发工作。
本说明书的预期读者为客户、业务或需求分析人员、测试人员、用户文档编写者、项目管理人员。

二、需求分析
1.需求细则：
游客（非员工）部分：
---注册账户-->浏览招聘信息（管理员创建）--》填写公司简历（查看，修改）-->浏览招聘信息-->投递简历-->接收面试邀请信息-->游客确认面试则可以被录用，成为员工


员工部分：
--员工登录
-->1，个人信息：相关信息包括个人基本信息（修改）、所在部门职位、相关培训信息、个人薪资、奖惩信息、个人考勤记录；
-->2，部门职位员工：员工可以查看公司所有的部门以及部门下的所有职位信息，并且可以查看某部门职位下的有哪些员工；
-->3，培训：涉及某员工的培训，该员工必须能收到关于培训的通知，并且能查看该次培训的相关内容；
-->4，奖惩：员工可以查看到与自己相关的奖惩信息，包括奖惩金额，奖惩时间，奖惩原因；
-->5，考勤打卡：员工每天上下班必须打卡，生成打卡记录；规定上班天数以及上下班时间，迟到早退则从基本工资中扣除一定的金额(或者自动生成一条惩罚记录，扣除相应的钱数)，迟到早退超过三小时则算旷工，扣除一整天的基本工资（同上）；
-->6，薪资：员工可以查看自己薪资信息，若当月薪资还未结算，员工无法查看；若员工对自己的薪资有异议，可以申请复议，由管理员审核，经由管理员审核后薪资如果有出入，生成一条奖励或惩罚记录，下月补发；（薪资务必要记录清晰，钱的多或少记录清楚。）


管理员部分：
部门：增、删、改、查；
-->可以通过查看某部门，可以查看该部门下的所有职位和员工；
-->部门创建要有创建时间；
-->若该部门下存在在职员工，不能进行删除；
职位：增、删、改、查；（与部门对应）
-->可以通过查看某职位，可以查看该职位下的员工；
-->职位创建要有创建时间；并且标明是哪个部门下的职位创建；
-->若该职位下存在在职员工，不能进行删除；
员工：增、删、改、查；
---员工新增主要从投递的简历进行录用
---可以查看员工对应的基本信息、薪资、培训、绩效、部门、职位、考勤；
---对员工进行换岗（用二级联动实现）。
---员工应该有状态、例如：离职、在职、试用期等
---员工（离职）应有原因说明。


薪资：薪资结算
-->指定管理员结算工资的日期
---基本薪资+绩效奖金+加班费用+奖惩费用-社保
---员工薪资复议

考勤：查；

培训：增、删、改、查；
---针对部门或员工（多人培训），及时推送对应的消息
---（提高）培训考试

招聘：增、删、改、查
---发布招聘信息（可借鉴各大招聘网站）
  ---流程：收取简历-->查阅简历-->做标记（是否已阅）-->通知面试、并记录面试时间-->通知安排员工进行面试-->录用(动态的将简历信息取出并存入数据库)
奖惩：增、删、改、查
  ---时间、原因……

使用数据库（mysql或oracle）
用户表、管理员表、简历表（可参考招聘网站简历字段）、员工表、部门表、职位表、薪资表、奖惩表、招聘表、培训表、考勤表……

2.技术要求：
*搭建项目框架
*部门职位使用二级联动
*整个项目要有页面布局
*技术提高：
日志管理及信息-->每一个流程操作完后，能够生产对应的日志信息！！

*注意考虑实际状况：比如普通员工的信息（部门领导、自己、管理员）都可以查看

三、项目规定
1.对功能的规定
 需求是整个工程的开始，对需求的深刻了解可以提高开发过程中的设计与理解，此需求要求侧重点为：功能模块、设计及代码规范、产品优化及健壮性。分基本功能、主要功能和提高功能，其中，基本功能为必须完成功能，如缺失则不能参加答辩；主要功能指难度适中，适合所有学员的功能，要求全部实现；提高功能适于能力较强的学员完成，通过这类功能，可以对自己的技术能力和综合水平有显著提高。

-->推荐及自选个性功能
属性：提升
描述：完成推荐功能或自定义个性功能，为应用增添个性功能以提高应用的趣味性、安全性等。

2.对性能的规定
本软件在设计方面本着方便、实用性高的宗旨，性能方面应遵循如下原则：
●流畅性： 软件运行应该流畅，不会出现卡机；
●美观性： 软件界面应力求美观，赏心悦目；
●稳定性： 软件运行过程中不会出现BUG；
●边界条件：主界面应该全屏；
●资源损耗：设计尽量节约资源；不用的资源应及时回收（如服务结束，线程应退出）；
3. 对可维护性的规定
    对可维护性的最终要求：别人能够轻松上手你的代码。
●结构清晰：封装良好；继承关系清晰；代码块清晰；
●变量命名规范，变量名应该具有自明性；
●注释充分：变量、方法、代码功能块、一些复杂算法……等都需要清晰明了地说明；

4. 对个性的规定
把项目做出个性出来。下列各项中有和比人不同之处、或很有创意，即可认为有个性。独立设计的软件，一般都会出现一些个性。参考、抄袭不会出现个性。
●设计思路：包括软件的整体架构、功能块的设计思路等等；
●功能实现：从用户的角度，使用上发现与众不同的地方；
●其它方面；
5. 对项目过程的规定
本着紧张但不急躁、不参考、不拷贝的原则进行。
?紧张但不慌张
项目周期只有两周，这还包括项目答辩时间。所以项目时间比较紧张，但不能慌张。要有自己明确的设计思路，一步步沿着思路走下去，以此来巩固自己所学，锻炼自己的独立工作能力。
?能自己做，绝不参考别人
自己还没有做，还没有想，就去看别人的，这样尽管功能做出来了，但却没有什么意义，真正面试时还是不会。作者和读者，天壤之别。
如果自己实在无法搞定，一个问题卡了快一天了，则可以咨询别人一下想法，再行编码；尽量不直接看别人代码。
?不拷贝
一旦发现拷贝，取消答辩资格。答辩时发现，答辩成绩减半。
copy别人的代码，甚至直接运行别人的代码，以此作为自己的项目进展，这是严禁的。严禁运行效果出来了，却不知道是哪些代码造成的，严禁明明是自己写的代码，但却不知道为什么这么写。
四．运行环境
1. 硬件环境
   PC
2. 开发工具
Eclipse、IntelliJ IDEA
3.开发环境
Jdk+Tomcat+SSM